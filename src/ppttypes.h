/**
 * @file   ppttypes.h
 * @author Alex Ott <alexott@gmail.com>
 * @date   26 ‰≈À 2004
 * Version: $Id: ppttypes.h,v 1.1 2006-02-24 17:44:06 vitus Exp $
 * Copyright: Alex Ott
 * 
 * @brief  Enumerations for .ppt records
 * 
 * 
 */

#ifndef _PPTTYPES_H
#define _PPTTYPES_H

#define MAX_MS_RECSIZE 18000

#define CATDOC_PPT_TYPES_FOREACH(F) \
F(DOCUMENT, 1000) \
F(DOCUMENT_ATOM, 1001) \
F(DOCUMENT_END, 1002) \
F(SLIDE_PERSIST, 1003) \
F(SLIDE_BASE, 1004) \
F(SLIDE_BASE_ATOM, 1005) \
F(SLIDE, 1006) \
F(SLIDE_ATOM, 1007) \
F(NOTES, 1008) \
F(NOTES_ATOM, 1009) \
F(ENVIRONMENT, 1010) \
F(SLIDE_PERSIST_ATOM, 1011) \
F(MAIN_MASTER, 1016) \
F(SSSLIDE_INFO_ATOM, 1017) \
F(SSDOC_INFO_ATOM, 1025) \
F(EX_OBJ_LIST, 1033) \
F(PPDRAWING_GROUP, 1035) \
F(PPDRAWING, 1036) \
F(STYLE_XML, 1039) \
F(ZIPPED_CONTENT0, 1054) \
F(ZIPPED_CONTENT1, 1059) \
F(ZIPPED_CONTENT2, 1064) \
F(LIST, 2000) \
F(COLOR_SCHEME_ATOM, 2032) \
F(TEXT_HEADER_ATOM, 3999) \
F(TEXT_CHARS_ATOM, 4000) \
F(STYLE_TEXT_PROP_ATOM, 4001) \
F(TX_MASTER_STYLE_ATOM, 4003) \
F(TEXT_BYTES_ATOM, 4008) \
F(TEXT_SPEC_INFO, 4010) \
F(EX_OLE_OBJ_STG, 4113) \
F(CSTRING, 4026) \
F(HANDOUT, 4041) \
F(HEADERS_FOOTERS, 4057) \
F(HEADERS_FOOTERS_ATOM, 4058) \
F(SLIDE_LIST_WITH_TEXT, 4080) \
F(SLIDE_LIST, 4084) \
F(USER_EDIT_ATOM, 4085) \
F(PROG_TAGS, 5000) \
F(PROG_STRING_TAG, 5001) \
F(PROG_BINARY_TAG, 5002) \
F(PERSIST_PTR_INCREMENTAL_BLOCK, 6002) \
F(PPDRAWING_FRAME_2, 0xF002) \
F(PPDRAWING_FRAME_3, 0xF003) \
F(PPDRAWING_FRAME_4, 0xF004) \
F(DFF_msofbtClientTextbox, 0xF00D)

#define PPDRAWING_FRAME_D_TYPE_STR 0x00000006
#define PPDRAWING_FRAME_D_SUBTYPE_CSTR 0x0FA8
#define PPDRAWING_FRAME_D_SUBTYPE_WSTR 0x0FA0

#define CATDOC_PPT_TYPES_ENUM(NAME, NUM) NAME = NUM,

enum CatDocPptTypes
{
    CATDOC_PPT_TYPES_FOREACH(CATDOC_PPT_TYPES_ENUM)
};

#define CATDOC_PPT_TYPES_STR_CASE(NAME, NUM) case NUM: return #NAME;

char* CatDocPptTypesToStr(int type)
{
    switch (type)
    {
        CATDOC_PPT_TYPES_FOREACH(CATDOC_PPT_TYPES_STR_CASE)
    }
    static char buf[50];
    sprintf(buf, "0x%x", type);
    return buf;
}

//enum SkipStates
//{
//    EmptySkipState,
//    TextBoxSkipState,
//    NeedSkipState
//};
#endif /* _PPTTYPES_H */

